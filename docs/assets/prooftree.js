(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function n(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(o){if(o.ep)return;o.ep=!0;const s=n(o);fetch(o.href,s)}})();document.addEventListener("DOMContentLoaded",function(){const e=Array.from(document.body.getElementsByTagName("P")).filter(n=>n.innerText.includes("\\begin{prooftree}"));console.log("nodes",e),console.log(e.map(n=>N(n))),e.forEach(n=>w(n))});const w=t=>{const e=N(t);if(!e){console.log("cannot find fragment");return}const n=B(e);if(console.log(n),!n){console.log("parsing error");return}const r=O(n);if(!r){console.log("parsing error");return}e==null||e.nodeList.slice(1).forEach(s=>{var l;return(l=s.parentNode)==null?void 0:l.removeChild(s)}),console.log(r);const o=S(r);t.insertBefore(e==null?void 0:e.beforeTextNode,e==null?void 0:e.nodeList[0]),t.insertBefore(o,e==null?void 0:e.nodeList[0]),t.insertBefore(e==null?void 0:e.afterTextNode,e==null?void 0:e.nodeList[0]),t.removeChild(e==null?void 0:e.nodeList[0]),setTimeout($,0),t.innerText.includes("\\begin{prooftree}")&&w(t)},L=(t,e)=>{let n=-1,r=-1;for(let i=0;i<e.length;i++)if(e[i].nodeType===Node.TEXT_NODE){const u=e[i].nodeValue.indexOf(t);if(u!==-1){console.log(t),r=i,n=u;break}}if(n===-1)return null;const o=e[r].nodeValue,s=o.slice(0,n),l=o.slice(n+t.length),c=document.createTextNode(s),f=document.createTextNode(l);return[r,c,f]},N=t=>{const e=Array.from(t.childNodes),n=L("\\begin{prooftree}",e);if(n===null)return null;const[r,o,s]=n,l=e.slice(r),c=[...l];c.splice(0,1,s);const f=L("\\end{prooftree}",c);if(f===null)return null;const[i,u,a]=f,d=l.slice(0,i+1),m=c;m.splice(i,c.length-i,u);const h=m.filter(x=>x.nodeType!==Node.COMMENT_NODE),p={nodeList:d,prtrNodeList:h,beforeTextNode:o,afterTextNode:a};return console.log(p),p},I=t=>{t[0].nodeValue=t[0].nodeValue.trimStart()},C=t=>{const e=t[0].nodeValue.indexOf(`
`);if(e!==-1)return t[0].nodeValue=t[0].nodeValue.substring(e+1),!0;for(t.shift();t.length>0;)if(t[0].nodeType!==Node.TEXT_NODE)t.shift();else return C(t);return!1},g=(t,e)=>{const n=t[0].nodeValue,r=n.indexOf("}");if(r!==-1){const o=document.createTextNode(n.slice(0,r));return t[0].nodeValue=n.substring(r+1),e.push(o),e}else{for(e.push(t.shift());t.length>0;)if(t[0].nodeType!==Node.TEXT_NODE)e.push(t.shift());else return g(t,e);return null}},B=t=>{const e=t.prtrNodeList;let n=[],r=20;for(;e.length>0&&r-- >0&&(I(e),e.length!==0);){if(e[0].nodeType!==Node.TEXT_NODE)return null;const o=e[0].nodeValue;if(o.startsWith("%")){if(e[0].nodeValue=o.substring(1),console.log("consumeComments"),!C(e))return null}else if(o.startsWith("\\AXC{")){e[0].nodeValue=o.substring(5);const s=g(e,[]);if(s===null)return null;n.push({type:"AXC",body:s})}else if(o.startsWith("\\UIC{")){e[0].nodeValue=o.substring(5);const s=g(e,[]);if(s===null)return null;n.push({type:"UIC",body:s})}else if(o.startsWith("\\BIC{")){e[0].nodeValue=o.substring(5);const s=g(e,[]);if(s===null)return null;n.push({type:"BIC",body:s})}else if(o.startsWith("\\TIC{")){e[0].nodeValue=o.substring(5);const s=g(e,[]);if(s===null)return null;n.push({type:"TIC",body:s})}else if(o.startsWith("\\QuaternaryInfC{")){e[0].nodeValue=o.substring(16);const s=g(e,[]);if(s===null)return null;n.push({type:"QuaternaryInfC",body:s})}else if(o.startsWith("\\RightLabel{")){e[0].nodeValue=o.substring(12);const s=g(e,[]);if(s===null)return null;n.push({type:"RightLabel",body:s})}else if(e[0].nodeValue.length===0)console.log("oghi"),e.shift();else return console.log("error1",e[0].nodeValue),null}return console.log("reached"),n},T=(t,e,n)=>{const r=t[0];if(!r)return null;let o=[];r.type==="RightLabel"&&(t.shift(),o=r.body);const s=[];for(let l=0;l<n;l++){const c=P(t);if(!c)return null;s.push(c)}return{type:"Sequent",premises:s.reverse(),rightLabel:o,conclusion:e}},P=t=>{const e=t.shift();if(!e)return null;switch(e.type){case"AXC":return{type:"Axiom",axiom:e.body};case"UIC":return T(t,e.body,1);case"BIC":return T(t,e.body,2);case"TIC":return T(t,e.body,3);case"QuaternaryInfC":return T(t,e.body,4)}return null},O=t=>{const e=P(t.reverse());return t.length>0?null:e},y=(t,e)=>{const n=document.createElement("div");return n.classList.add("prtr-"+t),n.style.width="max-content",e.forEach(r=>n.appendChild(r)),n},E=t=>{switch(t.type){case"Axiom":return y("axiom",t.axiom);case"Sequent":return y("sequent",[y("premises",t.premises.map(E)),y("horizontal-rule",[y("right-label",t.rightLabel)]),y("conclusion",t.conclusion)])}},S=t=>y("proof-tree",[E(t)]),R=20,b=20,v=10,W=t=>t.reduce((e,n)=>e+n,0),A=t=>{switch(t.type){case"PSAxiom":{t.node.style.marginLeft=`${b}px`;return}case"PSSequent":{console.log(t);const e=t.prtrStyleAux;t.node.style.width=`${e.w}px`,t.nodePremises.style.marginLeft=`${e.mlp}px`,t.nodeHR.style.width=`${e.whr}px`,t.nodeHR.style.marginLeft=`${e.mlhr}px`,t.nodeHR.style.marginRight=`${e.mrhr}px`,t.nodeLabel.style.right=`-${e.widthL}px`,t.nodeConclusion.style.width=`${e.widthC}px`,t.nodeConclusion.style.marginLeft=`${e.mlc}px`,t.premises.forEach(A);return}}},V=t=>{if(t.classList.contains("prtr-axiom")){const e=t.offsetWidth+b*2;return console.log("axiom",e),{type:"PSAxiom",prtrStyleAux:{w:e,whr:e,mlc:0,mrc:0,mlhr:0,mrhr:0,widthC:e,widthL:0,mlp:0},node:t}}else if(t.classList.contains("prtr-sequent")){const e=t.children[0],n=t.children[1],r=n.children[0],o=t.children[2],s=Array.prototype.slice.apply(e.children),l=o.children[0].offsetWidth+b*2;console.log("widthC",l);const c=r.offsetWidth+v,f=s.map(V),i=f.map(a=>a.prtrStyleAux);s.length===0&&console.log("error: empty premises",s);const u=W(i.map(a=>a.w))+R*(i.length-1)-i[0].mlc-i[i.length-1].mrc;if(console.log("wpc",u),u>l){const a=u,d=i[0].mlc,m=d+(u-l)/2;console.log("mlc",m);const h=Math.max(i[i.length-1].mrc,c),p=h+(u-l)/2;return{type:"PSSequent",prtrStyleAux:{w:a+d+h,whr:a,mlc:m,mrc:p,mlhr:d,mrhr:h,widthC:l,widthL:c,mlp:0},premises:f,node:t,nodePremises:e,nodeHR:n,nodeLabel:r,nodeConclusion:o}}else{const a=l,d=Math.max(i[0].mlc-(l-u)/2,0);console.log("mlc",d);const m=Math.max((l-u)/2-i[0].mlc,0),h=d;console.log("mlc",h);const p=Math.max(i[i.length-1].mrc-(l-u)/2,c),x=p;return{type:"PSSequent",prtrStyleAux:{w:a+d+p,whr:a,mlc:h,mrc:x,mlhr:d,mrhr:p,widthC:l,widthL:c,mlp:m},premises:f,node:t,nodePremises:e,nodeHR:n,nodeLabel:r,nodeConclusion:o}}}else throw console.log("error"),new RangeError},$=()=>{const t=Array.from(document.getElementsByClassName("prtr-proof-tree"));console.log(t),t.forEach(e=>{const n=V(e.children[0]);A(n)})};
